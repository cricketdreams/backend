generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["user", "transaction", "ledger", "report", "login-report", "session"]
}

// --------------------
// ---------- User Models ---------
model Admin {
  code       String       @id @unique
  name       String
  password   String
  share      Float        @default(100)
  mobile     String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Subadmin   Subadmin[]
  Master     Master[]
  Superagent Superagent[]
  Agent      Agent[]
  Client     Client[]

  @@schema("user")
}

model Subadmin {
  code              String           @id @unique
  upLink            Admin            @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float        @default(0)
  matchCommission   Float        @default(0)
  mobileCommission  Float        @default(0)
  casinoCommission  Float        @default(0)
  status            Boolean      @default(true)
  limit             Float
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  Master            Master[]
  Superagent        Superagent[]
  Agent             Agent[]
  Client            Client[]
  SubadminLedger    SubadminLedger[]

  @@schema("user")
}

model Master {
  code              String         @id @unique
  upLink            Subadmin       @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float        @default(0)
  matchCommission   Float        @default(0)
  mobileCommission  Float        @default(0)
  casinoCommission  Float        @default(0)
  status            Boolean      @default(true)
  limit             Float
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  Admin             Admin          @relation(fields: [adminCode], references: [code])
  adminCode         String
  Superagent        Superagent[]
  Agent             Agent[]
  Client            Client[]
  MasterLedger      MasterLedger[]

  @@schema("user")
}

model Superagent {
  code              String             @id @unique
  upLink            Master             @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  casinoShare       Float    @default(0)
  sessionCommission Float    @default(0)
  matchCommission   Float    @default(0)
  mobileShare       Float    @default(0)
  casinoCommission  Float    @default(0)
  flatShare         Boolean  @default(false)
  casinoPlay        Boolean  @default(false)
  status            Boolean  @default(true)
  limit             Float
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  Admin             Admin              @relation(fields: [adminCode], references: [code])
  adminCode         String
  Subadmin          Subadmin           @relation(fields: [subadminCode], references: [code])
  subadminCode      String
  Agent             Agent[]
  Client            Client[]
  SuperagentLedger  SuperagentLedger[]

  @@schema("user")
}

model Agent {
  code              String        @id @unique
  upLink            Superagent    @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  casinoShare       Float      @default(0)
  sessionCommission Float      @default(0)
  matchCommission   Float      @default(0)
  mobileShare       Float      @default(0)
  casinoCommission  Float      @default(0)
  flatShare         Boolean    @default(false)
  casinoPlay        Boolean    @default(false)
  status            Boolean    @default(true)
  limit             Float
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  admin             Admin         @relation(fields: [adminCode], references: [code])
  adminCode         String
  subadmin          Subadmin      @relation(fields: [subadminCode], references: [code])
  subadminCode      String
  master            Master        @relation(fields: [masterCode], references: [code])
  masterCode        String
  Client            Client[]
  AgentLedger       AgentLedger[]

  @@schema("user")
}

model Client {
  code              String         @id @unique
  upLink            Agent          @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  sessionCommission Float      @default(0)
  matchCommission   Float      @default(0)
  mobileCharge      Float      @default(0)
  casinoCommission  Float      @default(0)
  status            Boolean    @default(true)
  limit             Float
  casinoPlay        Boolean    @default(false)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  admin             Admin      @relation(fields: [adminCode], references: [code])
  adminCode         String
  subadmin          Subadmin       @relation(fields: [subadminCode], references: [code])
  subadminCode      String
  master            Master         @relation(fields: [masterCode], references: [code])
  masterCode        String
  superagent        Superagent     @relation(fields: [superagentCode], references: [code])
  superagentCode    String
  ClientLedger      ClientLedger[]

  @@schema("user")
}

// --------------------
// ---------- Login Report ----------
model AdminLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

model SubadminLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

model MasterLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

model SuperagentLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

model AgentLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

model ClientLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("login-report")
}

// --------------------
// ---------- Report ----------
model AdminReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("login-report")
}

model SubadminReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("report")
}

model MasterReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("report")
}

model SuperagentReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("report")
}

model AgentReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("report")
}

model ClientReport {
  id        String   @id @default(uuid())
  code      String
  name      String
  createdAt DateTime @default(now())
  old       String
  new       String
  kisnekara String
  ipAddress String

  @@schema("report")
}

// --------------------
// ---------- Ledger ----------
model AdminLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String

  @@schema("ledger")
}

model SubadminLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String   @default("cash")
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String
  subadminCode   Subadmin @relation(fields: [code], references: [code])

  @@schema("ledger")
}

model MasterLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String
  masterCode     Master   @relation(fields: [code], references: [code])

  @@schema("ledger")
}

model SuperagentLedger {
  id             String     @id @default(uuid())
  code           String
  createdAt      DateTime   @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String
  superagentCode Superagent @relation(fields: [code], references: [code])

  @@schema("ledger")
}

model AgentLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String
  agentCode      Agent    @relation(fields: [code], references: [code])

  @@schema("ledger")
}

model ClientLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String // See later
  description    String
  kisnekara      String
  clientCode     Client   @relation(fields: [code], references: [code])

  @@schema("ledger")
}

// --------------------
// ---------- Session ----------
model Session {
  id        String   @id @default(uuid())
  ipAddress String
  name      String
  agent     String
  createdAt DateTime @default(now())
  expireAt  DateTime
  active    Boolean  @default(true)
  deleted   Boolean  @default(false)

  @@schema("session")
}

// --------------------
// ---------- Match ----------
model Match {
  matchId   Int      @id @default(autoincrement())
  name      String
  dataTime  DateTime // See later from api
  type      String
  declare   String
  wonBy     String
  plusMinus Float

  @@schema("report")
}
