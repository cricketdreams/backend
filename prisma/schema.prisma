generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["user", "transactional", "report", "session"]
}

// --------------------
// ---------- User Models ---------
model Admin {
  code      String     @id @unique
  name      String
  password  String
  share     Float      @default(100)
  mobile    String
  subadmin  Subadmin[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@schema("user")
}

model Subadmin {
  code              String   @id @unique
  upLink            Admin    @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float
  matchCommission   Float
  mobileCommission  Float
  status            Boolean  @default(true)
  limit             Float
  master            Master[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@schema("user")
}

model Master {
  code              String       @id @unique
  upLink            Subadmin     @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float
  matchCommission   Float
  mobileCommission  Float
  status            Boolean      @default(true)
  limit             Float
  superagent        Superagent[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  @@schema("user")
}

model Superagent {
  code              String   @id @unique
  upLink            Master   @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float
  matchCommission   Float
  mobileCommission  Float
  status            Boolean  @default(true)
  limit             Float
  agent             Agent[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@schema("user")
}

model Agent {
  code              String     @id @unique
  upLink            Superagent @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  share             Float
  sessionCommission Float
  matchCommission   Float
  mobileCommission  Float
  status            Boolean    @default(true)
  limit             Float
  client            Client[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@schema("user")
}

model Client {
  code              String   @id @unique
  upLink            Agent    @relation(fields: [upLinkCode], references: [code])
  upLinkCode        String
  name              String
  password          String
  mobile            String
  reference         String
  sessionCommission Float
  matchCommission   Float
  mobileCommission  Float
  status            Boolean  @default(true)
  limit             Float
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@schema("user")
}

// --------------------
// ---------- Login Report ----------
model AdminLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

model SubadminLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

model MasterLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

model SuperagentLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

model AgentLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

model ClientLoginReport {
  id        String   @id @default(uuid())
  code      String
  ipAddress String
  name      String
  createdAt DateTime @default(now())

  @@schema("report")
}

// --------------------
// ---------- Ledger ----------
model AdminLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

model SubadminLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

model MasterLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

model SuperagentLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

model AgentLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

model ClientLedger {
  id             String   @id @default(uuid())
  code           String
  createdAt      DateTime @default(now())
  collectionName String
  debit          Float
  credit         Float
  balance        Float
  type           String? // See later
  description    String?
  kisnekara      String

  @@schema("report")
}

// --------------------
// ---------- Session ----------
model Session {
  id        String   @id @default(uuid())
  ipAddress String
  name      String
  agent     String
  createdAt DateTime @default(now())
  expireAt  DateTime
  active    Boolean  @default(true)
  deleted   Boolean  @default(false)

  @@schema("session")
}

// --------------------
// ---------- Match ----------
model Match {
  matchId   Int      @id @default(autoincrement())
  name      String
  dataTime  DateTime // See later from api
  type      String
  declare   String
  wonBy     String
  plusMinus Float

  @@schema("report")
}
